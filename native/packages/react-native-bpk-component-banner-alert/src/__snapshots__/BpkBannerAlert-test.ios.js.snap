// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkBannerAlert should accept user-stlying 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "width": 50,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
    </View>
  </View>
</View>
`;

exports[`iOS BpkBannerAlert should render correctly 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
    </View>
  </View>
</View>
`;

exports[`iOS BpkBannerAlert should render correctly dismissable 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "height": 16,
              "tintColor": "rgb(82, 76, 97)",
              "width": 16,
            },
            Object {
              "tintColor": "rgb(129, 123, 143)",
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`iOS BpkBannerAlert should render correctly expandable 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "height": 16,
              "tintColor": "rgb(82, 76, 97)",
              "width": 16,
            },
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`iOS BpkBannerAlert should render correctly expanded 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "height": 16,
              "tintColor": "rgb(82, 76, 97)",
              "width": 16,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "padding": 12,
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 13,
            "fontWeight": "400",
            "lineHeight": 18,
          },
          false,
          Object {},
        ]
      }
    >
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sagittis sagittis purus, id blandit ipsum. Pellentesque nec diam nec erat condimentum dapibus. Nunc diam augue, egestas id egestas ut, facilisis nec mi. Donec et congue odio, nec laoreet est. Integer rhoncus varius arcu, a fringilla libero laoreet at.
    </Text>
  </View>
</View>
`;

exports[`iOS BpkBannerAlert should render correctly long text 1`] = `
<View
  style={
    Array [
      Object {
        "borderColor": "rgb(230, 228, 235)",
        "borderRadius": 4,
        "borderWidth": 1,
      },
      Object {
        "borderColor": "rgb(0, 215, 117)",
      },
    ]
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={null}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "minHeight": 30,
            "paddingBottom": 4,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 4,
            "width": "100%",
          },
        ]
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "tintColor": "rgb(0, 215, 117)",
            },
          ]
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgb(82, 76, 97)",
              "fontFamily": "System",
              "fontSize": 13,
              "fontWeight": "400",
              "lineHeight": 18,
            },
            false,
            Array [
              Object {
                "flex": 1,
                "paddingLeft": 10,
              },
            ],
          ]
        }
      >
        Successful alert.
      </Text>
      <Image
        source={1}
        style={
          Array [
            Object {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
            Object {
              "height": 16,
              "tintColor": "rgb(82, 76, 97)",
              "width": 16,
            },
          ]
        }
      />
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "padding": 12,
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "rgb(82, 76, 97)",
            "fontFamily": "System",
            "fontSize": 13,
            "fontWeight": "400",
            "lineHeight": 18,
          },
          false,
          Object {},
        ]
      }
    >
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sagittis sagittis purus, id blandit ipsum. Pellentesque nec diam nec erat condimentum dapibus. Nunc diam augue, egestas id egestas ut, facilisis nec mi. Donec et congue odio, nec laoreet est. Integer rhoncus varius arcu, a fringilla libero laoreet at.
    </Text>
  </View>
</View>
`;
